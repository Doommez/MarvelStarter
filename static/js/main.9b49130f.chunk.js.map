{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","servesers/MarvelService.js","hooks/http.hooks.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiKey","_apiBase","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","View","imgStyle","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAqBeA,EAnBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGC,KAAK,IAAR,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,mBAAGC,KAAK,IAAR,0BADR,IAGI,6BAAI,mBAAGA,KAAK,IAAR,+BCkDTC,EAhEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAhL,UACI,mBAAGC,UAAU,mBAAb,SACA,mBAAGA,UAAU,YAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,mBAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBCxDtG,MAA0B,kCCQ1BK,EANI,WACjB,OACE,qBAAKrB,MAAO,CAACG,QAAQ,QAASC,MAAM,QAAQC,OAAO,QAASiB,UAAU,UAAWrB,OAAO,UAAWsB,IAAKC,EAAKC,IAAK,W,uBC+BvGC,EAhCS,WACtB,MCFmB,WACnB,MAA6BC,oBAAS,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,mBAAS,MAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAuBA,MAAO,CAACH,UAASI,QApBHC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAmB,MAAOC,EAA1B,+BAA+B,KAAKC,EAApC,+BAA4C,CAAC,eAAe,oBAEpFT,GAAW,GAFa,kBAKCU,MAAML,EAAI,CAACE,SAAOC,OAAKC,YALxB,WAKdE,EALc,QAMPC,GANO,uBAOZ,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SAP1C,yBASHH,EAASI,OATN,eASdC,EATc,OAUpBhB,GAAW,GAVS,kBAWbgB,GAXa,wCAapBhB,GAAW,GACXE,EAAS,KAAEe,SAdS,+DAAD,sDAkBvB,IAEwBhB,QAAOiB,WADhBd,uBAAY,kBAAIF,EAAS,QAAM,KDtBPiB,GAAlCpB,EAAP,EAAOA,QAAQI,EAAf,EAAeA,QAAQF,EAAvB,EAAuBA,MAAMiB,EAA7B,EAA6BA,WACvBE,EAAQ,0CACRC,EAAS,4CAITC,EAAgB,uCAAC,0CAAAhB,EAAA,6DAAMiB,EAAN,+BAHL,IAGK,SACFpB,EAAQ,GAAD,OAAIkB,EAAJ,qCAAyCE,EAAzC,YAAmDH,IADxD,cACbI,EADa,yBAEZA,EAAIR,KAAKS,QAAQC,IACtBC,IAHiB,2CAAD,qDAMdC,EAAY,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,sEACDH,EAAQ,GAAD,OAAIkB,EAAJ,sBAA0BQ,EAA1B,YAAgCT,IADtC,cACbI,EADa,yBAEZG,EAAoBH,EAAIR,KAAKS,QAAQ,KAFzB,2CAAH,sDAIdE,EAAoB,SAACG,GAEzB,MAAO,CACLD,GAAGC,EAAKD,GACRE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAAL,UAAsBF,EAAKE,YAAYC,MAAM,EAAG,KAAhD,OAA4D,6CACzEC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAGjC,IACvBkC,KAAMT,EAAKQ,KAAK,GAAGjC,IACnBmC,OAAOV,EAAKU,OAAOC,QAGvB,MAAO,CAAC1C,UAAQE,QAAMqB,mBAAiBM,eAAaV,eEhCvC,G,MAAA,IAA0B,qCCkEnCwB,EAAO,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACJC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaE,EAA6BJ,EAA7BI,UAAWG,EAAkBP,EAAlBO,SAAUE,EAAQT,EAARS,KAC3CI,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAdT,IACAS,EAAW,CAAC,UAAc,YAI1B,sBAAK5E,UAAU,oBAAf,UACI,qBAAK2B,IAAKwC,EAAWtC,IAAI,mBAAmB7B,UAAU,kBAAkBI,MAAOwE,IAC/E,sBAAK5E,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCgE,IACjC,mBAAGhE,UAAU,oBAAb,SACKiE,IAEL,sBAAKjE,UAAU,mBAAf,UACI,mBAAGC,KAAMqE,EAAUtE,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMuE,EAAMxE,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQT6E,EArFI,WAEf,MAAwB9C,mBAAS,IAAjC,mBAAOgC,EAAP,KAAae,EAAb,KAGA,EAAiDhD,IAA1CE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAM2B,EAArB,EAAqBA,aAAaV,EAAlC,EAAkCA,WAElC4B,qBAAU,WACNC,IACA,IAAMC,EAAUC,YAAYF,EAAY,KAExC,OAAO,WACHG,cAAcF,MAEnB,IAEH,IAAMG,EAAe,SAACrB,GAClBe,EAAQf,IAMNiB,EAAa,WACf7B,IACA,IAAMW,EAAKuB,KAAKC,MAAM,IAAAD,KAAKE,UAAkC,OAC7D1B,EAAaC,GACR0B,KAAKJ,IAIRK,EAAevD,EAAQ,cAAC,EAAD,IAAkB,KACzCwD,EAAU1D,EAAU,cAAC,EAAD,IAAa,KACjC2D,EAAY3D,GAAWE,IAAU6B,EAA+B,KAAvB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAK/D,UAAU,aAAf,UACKyF,EACAC,EACAC,EACD,sBAAK3F,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQ4F,QAASZ,EAAYhF,UAAU,sBAAvC,SACI,qBAAKA,UAAU,QAAf,sBAEJ,qBAAK2B,IAAKkE,EAAShE,IAAI,UAAU7B,UAAU,kC,OCqF5C8F,G,MAzIC,SAACC,GAEb,MAA+BhE,mBAAS,IAAxC,mBAAOiE,EAAP,KAAgBC,EAAhB,KACA,EAA2ClE,oBAAS,GAApD,mBAAOmE,EAAP,KAAsBC,EAAtB,KACA,EAA2BpE,mBAAS,KAApC,mBAAOyB,EAAP,KAAc4C,EAAd,KACA,EAAiCrE,oBAAS,GAA1C,mBAAOsE,EAAP,KAAiBC,EAAjB,KAGA,EAA4CxE,IAArCE,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,MAAOqB,EAAvB,EAAuBA,iBAEvBwB,qBAAU,WACJwB,EAAU/C,GAAO,KAIrB,IASF,IAAM+C,EAAU,SAAC/C,EAAOgD,GAEhBL,GADDK,GAIHjD,EAAiBC,GACIgC,KAAKiB,IAOxBA,EAAmB,SAACC,GAEtB,IAAIC,GAAO,EACRD,EAAYE,OAAO,IAClBD,GAAM,GAGVV,GAAY,SAAAD,GAAQ,4BAAMA,GAAN,YAAmBU,OAEvCP,GAAkB,SAAAD,GAAc,OAAE,KAClCE,GAAU,SAAA5C,GAAM,OAAEA,EAAO,KACzB8C,GAAa,SAAAD,GAAS,OAAEM,MAKtBE,EAAWC,iBAAO,IAGlBC,EAAc,SAACjD,GAQjB+C,EAASG,QAAQC,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,0BACvDP,EAASG,QAAQlD,GAAIqD,UAAUE,IAAI,uBACnCR,EAASG,QAAQlD,GAAIwD,SA6CrB,IAAM5C,EAxCV,SAAqB6C,GACjB,IAAM7C,EAAS6C,EAAI5D,KAAI,SAACuD,EAAMM,GAC1B,IAAI5C,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnBsC,EAAK/C,YACLS,EAAW,CAAC,UAAc,UAI1B,qBACI5E,UAAU,aACVyH,SAAU,EACVC,IAAM,SAAAC,GAAE,OAAEd,EAASG,QAAQQ,GAAGG,GAE9B/B,QAAS,WACLG,EAAM6B,eAAeV,EAAKpD,IAC1BiD,EAAYS,IAEhBK,WAAY,SAACC,GACK,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACnBhC,EAAM6B,eAAeV,EAAKpD,IAC1BiD,EAAYS,KAZxB,UAeQ,qBAAK7F,IAAKuF,EAAK/C,UAAWtC,IAAKqF,EAAKlD,KAAM5D,MAAOwE,IACjD,qBAAK5E,UAAU,aAAf,SAA6BkH,EAAKlD,SAZjCkD,EAAKpD,OAiBtB,OACI,oBAAI9D,UAAU,aAAd,SACK0E,IASKsD,CAAYhC,GAEpBP,EAAevD,EAAQ,cAAC,EAAD,IAAkB,KACzCwD,EAAU1D,IAAYkE,EAAiB,cAAC,EAAD,IAAa,KAG1D,OACI,sBAAKlG,UAAU,aAAf,UACKyF,EACAC,EACFhB,EACC,wBACI1E,UAAU,mCACViI,SAAU/B,EACV9F,MAAO,CAAC,QAAWiG,EAAY,OAAS,SACxCT,QAAS,kBAAMW,EAAU/C,IAJ7B,SAKI,qBAAKxD,UAAU,QAAf,8BCpHLkI,G,MAjBE,WACb,OACI,qCACI,mBAAGlI,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCC0CzB2E,G,MAAO,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACJC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaE,EAAqCJ,EAArCI,UAAWG,EAA0BP,EAA1BO,SAAUE,EAAgBT,EAAhBS,KAAMC,EAAUV,EAAVU,OAEjDG,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAdT,IACAS,EAAW,CAAC,UAAc,YAI1B,qCACI,sBAAK5E,UAAU,eAAf,UACI,qBAAK2B,IAAKwC,EAAWtC,IAAKmC,EAAM5D,MAAOwE,IACvC,gCACI,qBAAK5E,UAAU,kBAAf,SAAkCgE,IAClC,sBAAKhE,UAAU,aAAf,UACI,mBAAGC,KAAMqE,EAAUtE,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMuE,EAAMxE,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACKiE,IAEL,qBAAKjE,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACKyE,EAAOmC,OAAS,EAAI,KAAO,yCAExBnC,EAAOd,KAAI,SAACuD,EAAMM,GAEd,KAAIA,EAAI,GACR,OACI,oBAAYxH,UAAU,oBAAtB,SACKkH,EAAKlD,MADDwD,cAetBW,EA/FE,SAACpC,GAEd,MAAwBhE,mBAAS,MAAjC,mBAAOgC,EAAP,KAAae,EAAb,KAEA,EAAiDhD,IAA1CE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAM2B,EAArB,EAAqBA,aAAaV,EAAlC,EAAkCA,WAElC4B,qBAAU,WACNC,MACD,CAACe,EAAMqC,SAEV,IAAMpD,EAAa,WACf7B,IACA,IAAOiF,EAAUrC,EAAVqC,OACFA,GAILvE,EAAauE,GACR5C,KAAKJ,IAIRA,EAAe,SAACrB,GAElBe,EAAQf,IAMNsE,EAAWtE,GAAQ/B,GAAWE,EAAQ,KAAO,cAAC,EAAD,IAC7CuD,EAAevD,EAAQ,cAAC,EAAD,IAAkB,KACzCwD,EAAU1D,EAAU,cAAC,EAAD,IAAa,KACjC2D,EAAY3D,GAAWE,IAAU6B,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAK/D,UAAU,aAAf,UACKqI,EACA5C,EACAC,EACAC,M,gCCpBE2C,E,kDAzBb,WAAYvC,GAAO,IAAD,8BAChB,cAAMA,IACDwC,MAAM,CACTrG,OAAM,GAHQ,E,qDAOlB,SAAkBA,EAAOsG,GACvBC,QAAQC,IAAIxG,EAAOsG,GACnBG,KAAKC,SAAS,CACZ1G,OAAM,M,oBAGV,WACE,OAAGyG,KAAKJ,MAAMrG,MACL,cAAC,EAAD,IAGDyG,KAAK5C,MAAM8C,a,QAnBKC,WCJb,MAA0B,mCCyC1BC,EAhCJ,WACP,MAA6BhH,mBAAS,GAAtC,mBAAOiH,EAAP,KAAoBlE,EAApB,KAUI,OACI,sBAAK9E,UAAU,MAAf,UACI,cAAC,EAAD,IACA,iCACI,cAAC,EAAD,UACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,gBAAf,UACA,cAAC,EAAD,UAAe,cAAC,EAAD,CAAU4H,eAfpB,SAAC9D,GACnBgB,EAAQhB,QAeM,cAAC,EAAD,UACG,cAAC,EAAD,CAAUsE,OAAQY,SAGtB,qBAAKhJ,UAAU,gBAAgB2B,IAAKsH,EAAYpH,IAAI,kB,MCxBxEqH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b49130f.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\n\nconst ErrorMessage=()=>{\n  return(\n    <img style={{display:\"block\", width:\"250px\",height:\"250px\", objectFit:\"contain\", margin:\"0 auto\"}} src={img} alt={\"error\"}/>\n  )\n}\n\nexport default ErrorMessage ","import { useHttp } from \"../hooks/http.hooks\";\n\n\nconst  useMarvelService=()=>{\n  const {loading,request,error,clearError}=useHttp()\n  const _apiKey=\"apikey=41f31bb5661e439b207d7fa69245080f\"\n  const _apiBase=\"https://gateway.marvel.com:443/v1/public/\";\n  const _baseOffest=210;\n\n\n  const getAllCharacters=async(offset = _baseOffest)=>{\n      const res= await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n      return res.data.results.map(\n        _transformCharacter\n      )\n    }\n    const getCharacter = async (id) => {\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n      return _transformCharacter(res.data.results[0]);\n  }\n  const _transformCharacter=(char)=>{\n    \n    return {\n      id:char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics:char.comics.items\n    }\n  }\n  return {loading,error,getAllCharacters,getCharacter,clearError}\n}\n\nexport default useMarvelService","import { useState,useCallback } from \"react\";\n\nexport const useHttp=()=>{\n  const [loading,setLoading] = useState(false);\n  const [error,setError] = useState(null);\n\n\n  const request=useCallback(async (url, method=\"GET\", body=null,headers={'Content-Type':'application/json'})=>{\n\n    setLoading(true);\n\n    try{\n        const response=await fetch(url,{method,body,headers});\n        if(!response.ok){\n          throw new Error(`could not ferch ${url}, status: ${response.status}`)\n        }\n        const data=await response.json();\n        setLoading(false)\n        return data\n    } catch(e){\n        setLoading(false)\n        setError(e.message)\n        throw e\n    }\n\n  },[])\n  const clearError=useCallback(()=>setError(null),[])\n  return {loading, request, error, clearError}\n\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\nimport {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../servesers/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n   \n\n    const {loading,error,getCharacter,clearError} =  useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n\n\n    const updateChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded)\n          \n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useRef, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../servesers/MarvelService';\nimport './charList.scss';\nimport propTypes  from 'prop-types';\n\n\nconst CharList =(props)=> {\n\n    const [charList,setCharList] = useState([])\n    const [newItemLoading,setNewItemLoading] = useState(false)\n    const [offset,setOffset] = useState(210)\n    const [charEnded,setCharEnded] = useState(false)\n   \n    \n    const {loading, error, getAllCharacters} =  useMarvelService();\n\n    useEffect(()=>{\n          onRequest(offset,true) \n       /*  marvelService.getAllCharacters()\n            .then(onCharListLoaded)\n            .catch(onError) */\n    },[])\n\n   /*  componentDidMount() {\n        this.marvelService.getAllCharacters()\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n           \n    } */\n\n    const onRequest=(offset,initial)=>{\n        if(initial){\n            setNewItemLoading(false) \n        }else setNewItemLoading(true)\n       \n        getAllCharacters(offset)\n                            .then(onCharListLoaded)\n                           \n    }\n\n    \n\n\n    const onCharListLoaded = (newCharList) => {\n        \n        let ended =false;\n        if(newCharList.length<9){\n            ended=true\n        }\n\n        setCharList(charList=>[...charList, ...newCharList ])\n      \n        setNewItemLoading(newItemLoading=>false)\n        setOffset(offset=>offset+9)\n        setCharEnded(charEnded=>ended)\n    }\n\n  \n\n    const itemRefs = useRef([])\n\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={(el=>itemRefs.current[i]=el)}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n  \n\n\n        \n        const items = renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n       \n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n              {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    \n}\n\nCharList.propTypes = {\n    onCharSelected: propTypes.func.isRequired\n}\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../servesers/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n   \n    const {loading,error,getCharacter,clearError} =  useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        clearError()\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n       \n        getCharacter(charId)\n            .then(onCharLoaded)\n           \n    }\n\n    const onCharLoaded = (char) => {\n     \n        setChar(char);\n    }\n\n\n   \n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\n\nclass ErrorBoundary extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      error:false\n    }\n  }\n\n  componentDidCatch(error, errorInfo){\n    console.log(error, errorInfo);\n    this.setState({\n      error:true\n    })\n  }\n  render(){\n    if(this.state.error){\n      return <ErrorMessage/>\n    }\n    \n    return  this.props.children;\n  }\n      \n}\n\n\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from '../../resources/img/vision.png';\nimport { useState } from \"react\";\n\nconst App =()=>{\n    const [selectedChar,setChar]=useState(0)\n   \n\n    const onCharSelected=(id)=>{\n       setChar(id)\n    }\n\n   \n\n\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                      <RandomChar/>\n                    </ErrorBoundary>  \n                    <div className=\"char__content\">\n                    <ErrorBoundary><CharList onCharSelected={onCharSelected}/></ErrorBoundary>   \n                     <ErrorBoundary >  \n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>  \n                    </div> \n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    \n   \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}