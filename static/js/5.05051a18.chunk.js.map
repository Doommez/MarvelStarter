{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","servesers/MarvelService.js","hooks/http.hooks.js","components/errorBoundary/ErrorBoundary.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiKey","_apiBase","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","comics","title","description","pageCount","thumbnail","path","extension","language","textObjects","price","prices","char","name","slice","homepage","urls","wiki","items","ErrorBoundary","props","state","errorInfo","console","log","this","setState","children","Component","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","className","to","renderItems","errorMessage","spiner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage"],"mappings":"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","file":"static/js/5.05051a18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\n\nconst ErrorMessage=()=>{\n  return(\n    <img style={{display:\"block\", width:\"250px\",height:\"250px\", objectFit:\"contain\", margin:\"0 auto\"}} src={img} alt={\"error\"}/>\n  )\n}\n\nexport default ErrorMessage ","import { useHttp } from \"../hooks/http.hooks\";\n\n\nconst  useMarvelService=()=>{\n  const {loading,request,error,clearError}=useHttp()\n  const _apiKey=\"apikey=41f31bb5661e439b207d7fa69245080f\"\n  const _apiBase=\"https://gateway.marvel.com:443/v1/public/\";\n  const _baseOffest=210;\n\n\n  const getAllCharacters=async(offset = _baseOffest)=>{\n      const res= await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n      return res.data.results.map(\n        _transformCharacter\n      )\n    }\n\n\n    const getCharacter = async (id) => {\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n      return _transformCharacter(res.data.results[0]);\n  }\n\n const getAllComics=async (offset=0)=>{\n    const res=await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\n    return res.data.results.map(_transformComics)\n  } \n\n  const getComics = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n}\n\n\n  const _transformComics=(comics)=>{\n    return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n\n    }\n  }\n\n\n\n  const _transformCharacter=(char)=>{\n    \n    return {\n      id:char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics:char.comics.items\n    }\n  }\n  return {loading,error,getAllCharacters,getCharacter,clearError,getAllComics,getComics}\n}\n\nexport default useMarvelService","import { useState,useCallback } from \"react\";\n\nexport const useHttp=()=>{\n  const [loading,setLoading] = useState(false);\n  const [error,setError] = useState(null);\n\n\n  const request=useCallback(async (url, method=\"GET\", body=null,headers={'Content-Type':'application/json'})=>{\n\n    setLoading(true);\n\n    try{\n        const response=await fetch(url,{method,body,headers});\n        if(!response.ok){\n          throw new Error(`could not ferch ${url}, status: ${response.status}`)\n        }\n        const data=await response.json();\n        setLoading(false)\n        return data\n    } catch(e){\n        setLoading(false)\n        setError(e.message)\n        throw e\n    }\n\n  },[])\n  const clearError=useCallback(()=>setError(null),[])\n  return {loading, request, error, clearError}\n\n}","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\n\nclass ErrorBoundary extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      error:false\n    }\n  }\n\n  componentDidCatch(error, errorInfo){\n    console.log(error, errorInfo);\n    this.setState({\n      error:true\n    })\n  }\n  render(){\n    if(this.state.error){\n      return <ErrorMessage/>\n    }\n    \n    return  this.props.children;\n  }\n      \n}\n\n\n\nexport default ErrorBoundary","import './comicsList.scss';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../servesers/MarvelService';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport Spinner from '../spinner/Spinner';\nimport { Link } from 'react-router-dom';\n\n\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n\n    const {loading, error, getAllComics}= useMarvelService()\n\n    useEffect(()=>{\n        onRequest(offset,true)\n    },[])\n\n    const onRequest=(offset,initial)=>{\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded=(newComicsList)=>{\n        let ended=false;\n        if(newComicsList.length<8){\n            ended=true;\n        }\n        setComicsList([...comicsList,...newComicsList]);\n        setnewItemLoading(false)\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n\n    }\n    function renderItems(arr){\n        const items=arr.map((item,i)=>{\n          \n            return(\n                <li className=\"comics__item\" key={i}>\n                <Link to={`/MarvelStarter/comics/${item.id}`}>\n                    <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.pageCount}</div>\n                    <div className=\"comics__item-price\">{item.language}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n            )\n        })\n        return(\n            <ul className=\"comics__grid\">\n                {items}\n\n            </ul>\n        )\n    }\n\n\n    const items = renderItems(comicsList);\n    \n    const errorMessage=error?<ErrorBoundary/>:null;\n    const spiner=loading&&!newItemLoading?<Spinner/>:null\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spiner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;"],"sourceRoot":""}