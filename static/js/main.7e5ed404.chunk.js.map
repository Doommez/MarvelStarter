{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","servesers/MarvelService.js","hooks/http.hooks.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","style","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiKey","_apiBase","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","comics","title","description","pageCount","thumbnail","path","extension","language","textObjects","price","prices","char","name","slice","homepage","urls","wiki","items","View","imgStyle","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","setnewItemLoading","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","spiner","AppBanner","avengers","avengersLogo","ComicsPage","App","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7e5ed404.chunk.js","sourcesContent":["import {Link, NavLink} from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/MarvelStarter/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                                     \n                                    style={({isActive})=>({\"color\":isActive?'#9f0013':\"black\"})} \n                                    to=\"/MarvelStarter/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink   \n                                style={({isActive})=>({\"color\":isActive?'#9f0013':\"black\"})} \n                                to=\"/MarvelStarter/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\n\nconst ErrorMessage=()=>{\n  return(\n    <img style={{display:\"block\", width:\"250px\",height:\"250px\", objectFit:\"contain\", margin:\"0 auto\"}} src={img} alt={\"error\"}/>\n  )\n}\n\nexport default ErrorMessage ","import { useHttp } from \"../hooks/http.hooks\";\n\n\nconst  useMarvelService=()=>{\n  const {loading,request,error,clearError}=useHttp()\n  const _apiKey=\"apikey=41f31bb5661e439b207d7fa69245080f\"\n  const _apiBase=\"https://gateway.marvel.com:443/v1/public/\";\n  const _baseOffest=210;\n\n\n  const getAllCharacters=async(offset = _baseOffest)=>{\n      const res= await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n      return res.data.results.map(\n        _transformCharacter\n      )\n    }\n\n\n    const getCharacter = async (id) => {\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n      return _transformCharacter(res.data.results[0]);\n  }\n\n const getAllComics=async (offset=0)=>{\n    const res=await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\n    return res.data.results.map(_transformComics)\n  } \n\n  const getComics = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n}\n\n\n  const _transformComics=(comics)=>{\n    return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n\n    }\n  }\n\n\n\n  const _transformCharacter=(char)=>{\n    \n    return {\n      id:char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics:char.comics.items\n    }\n  }\n  return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics}\n}\n\nexport default useMarvelService","import { useState,useCallback } from \"react\";\n\nexport const useHttp=()=>{\n  const [loading,setLoading] = useState(false);\n  const [error,setError] = useState(null);\n\n\n  const request=useCallback(async (url, method=\"GET\", body=null,headers={'Content-Type':'application/json'})=>{\n\n    setLoading(true);\n\n    try{\n        const response=await fetch(url,{method,body,headers});\n        if(!response.ok){\n          throw new Error(`could not ferch ${url}, status: ${response.status}`)\n        }\n        const data=await response.json();\n        setLoading(false)\n        return data\n    } catch(e){\n        setLoading(false)\n        setError(e.message)\n        throw e\n    }\n\n  },[])\n  const clearError=useCallback(()=>setError(null),[])\n  return {loading, request, error, clearError}\n\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\nimport {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../servesers/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n   \n\n    const {loading,error,getCharacter,clearError} =  useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n\n\n    const updateChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded)\n          \n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useRef, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../servesers/MarvelService';\nimport './charList.scss';\nimport propTypes  from 'prop-types';\n\n\nconst CharList =(props)=> {\n\n    const [charList,setCharList] = useState([])\n    const [newItemLoading,setNewItemLoading] = useState(false)\n    const [offset,setOffset] = useState(210)\n    const [charEnded,setCharEnded] = useState(false)\n   \n    \n    const {loading, error, getAllCharacters} =  useMarvelService();\n\n    useEffect(()=>{\n          onRequest(offset,true) \n      \n    },[])\n\n  \n\n    const onRequest=(offset,initial)=>{\n        if(initial){\n            setNewItemLoading(false) \n        }else setNewItemLoading(true)\n       \n        getAllCharacters(offset)\n                            .then(onCharListLoaded)\n                           \n    }\n\n    \n\n\n    const onCharListLoaded = (newCharList) => {\n        \n        let ended =false;\n        if(newCharList.length<9){\n            ended=true\n        }\n\n        setCharList(charList=>[...charList, ...newCharList ])\n      \n        setNewItemLoading(newItemLoading=>false)\n        setOffset(offset=>offset+9)\n        setCharEnded(charEnded=>ended)\n    }\n\n  \n\n    const itemRefs = useRef([])\n\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={(el=>itemRefs.current[i]=el)}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n  \n\n\n        \n        const items = renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n       \n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n              {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    \n}\n\nCharList.propTypes = {\n    onCharSelected: propTypes.func.isRequired\n}\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../servesers/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n   \n    const {loading,error,getCharacter,clearError} =  useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        clearError()\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n       \n        getCharacter(charId)\n            .then(onCharLoaded)\n           \n    }\n\n    const onCharLoaded = (char) => {\n     \n        setChar(char);\n    }\n\n\n   \n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\n\nclass ErrorBoundary extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      error:false\n    }\n  }\n\n  componentDidCatch(error, errorInfo){\n    console.log(error, errorInfo);\n    this.setState({\n      error:true\n    })\n  }\n  render(){\n    if(this.state.error){\n      return <ErrorMessage/>\n    }\n    \n    return  this.props.children;\n  }\n      \n}\n\n\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","import './comicsList.scss';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../servesers/MarvelService';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport Spinner from '../spinner/Spinner';\n\n\n\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n\n    const {loading, error, getAllComics}= useMarvelService()\n\n    useEffect(()=>{\n        onRequest(offset,true)\n    },[])\n\n    const onRequest=(offset,initial)=>{\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded=(newComicsList)=>{\n        let ended=false;\n        if(newComicsList.length<8){\n            ended=true;\n        }\n        setComicsList([...comicsList,...newComicsList]);\n        setnewItemLoading(false)\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n\n    }\n    function renderItems(arr){\n        const items=arr.map((item,i)=>{\n            return(\n                <li className=\"comics__item\" key={i}>\n                <a href=\"#\">\n                    <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.pageCount}</div>\n                    <div className=\"comics__item-price\">{item.language}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </a>\n            </li>\n            )\n        })\n        return(\n            <ul className=\"comics__grid\">\n                {items}\n\n            </ul>\n        )\n    }\n\n\n    const items = renderItems(comicsList);\n    \n    const errorMessage=error?<ErrorBoundary/>:null;\n    const spiner=loading&&!newItemLoading?<Spinner/>:null\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spiner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;","\nimport AppHeader from \"../appHeader/AppHeader\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { MainPage,ComicsPage } from \"../pages/index\";\n\n\nconst App =()=>{\n   \n   \n\n\n        return (\n            <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n\n                        <Route  path=\"/MarvelStarter/\" element={<MainPage/>}/>\n                        <Route  path=\"/MarvelStarter/comics\" element={<ComicsPage/>}/>\n  \n                    </Routes>\n                </main>\n            </div>\n        </Router>\n        )\n    \n   \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.createRoot(\n  document.getElementById('root')\n).render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>\n)\n\n\n\n"],"sourceRoot":""}