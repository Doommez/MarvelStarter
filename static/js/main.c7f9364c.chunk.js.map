{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","servesers/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffest","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","props","state","loading","error","marvelService","onError","setState","onCharLoad","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f9364c.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\n\n\n\nclass MarvelService{\n  _apiBase=\"https://gateway.marvel.com:443/v1/public/\";\n  _apiKey=\"apikey=41f31bb5661e439b207d7fa69245080f\"\n  _baseOffest=210;\n\ngetResource= async (url) =>{\n  let res=await fetch(url)\n    if(!res.ok){\n      throw new Error(`could not ferch ${url}, status: ${res.status}`)\n    }\n  return await res.json();\n  }\n  getAllCharacters=async(offset = this._baseOffest)=>{\n      const res= await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\n      return res.data.results.map(\n        this._transformCharacter\n      )\n    }\n  getCharacter= async (id)=>{\n    const res= await this.getResource(`${this._apiBase}characters/${id}?&${this._apiKey}`)\n    return this._transformCharacter(res.data.results[0])\n  }\n  _transformCharacter=(char)=>{\n    \n    return {\n      id:char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics:char.comics.items\n    }\n  }\n}\n\nexport default MarvelService","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\n\nconst ErrorMessage=()=>{\n  return(\n    <img style={{display:\"block\", width:\"250px\",height:\"250px\", objectFit:\"contain\", margin:\"0 auto\"}} src={img} alt={\"error\"}/>\n  )\n}\n\nexport default ErrorMessage ","\nimport { Component } from 'react/cjs/react.production.min';\n\nimport './randomChar.scss';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../servesers/MarvelService';\nimport Spinner from '../spinner/Spinner.js';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\n\nclass RandomChar extends Component{\n    constructor(props){\n        super(props);\n        \n    }\n    state={\n        char:{},\n        loading:true,\n        error:false,\n\n    }\n    marvelService= new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\n    onError=()=>{\n        this.setState({\n            loading:false,\n            error:true\n        })\n    }\n\n    onCharLoad=(char)=>{\n      \n        this.setState({char,\n        loading:false\n    })\n    }\n\n    updateChar=()=>{\n        const id=Math.floor(Math.random()*(1011400-1011000)+1011000);\n        this.marvelService\n                .getCharacter(id)\n                .then(this.onCharLoad)\n                .catch(this.onError)\n                \n    }\n    render(){\n        const {char,loading,error}=this.state\n       const errorMessage=error?<ErrorMessage/>:null;\n       const spinner = loading?<Spinner/>:null;\n       const content = !(loading||error)?<View char={char}/>:null\n      \n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                {/* {loading?<Spinner/>:<View char={char}/>} */}\n                {/* <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homePage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div> */}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.updateChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View=({char})=>{\n    \nconst {name,description,thumbnail,homepage,wiki}=char\n\n    return(\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" style={(thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\")?{objectFit: 'contain'}:null} className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../servesers/MarvelService';\nimport './charList.scss';\nimport propTypes  from 'prop-types';\n\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading:false,\n        offset:210,\n        charEnded:false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.marvelService.getAllCharacters()\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n           \n    }\n    onRequest=(offset)=>{\n        this.onCharListLoading()\n        this.marvelService.getAllCharacters(offset)\n                            .then(this.onCharListLoaded)\n                            .catch(this.onError)\n    }\n\n    onCharListLoading=()=>{\n        \n        this.setState({\n            newItemLoading:true\n        })\n    }\n\n\n    onCharListLoaded = (newCharList) => {\n        \n        let ended =false;\n        if(newCharList.length<9){\n            ended=true\n        }\n\n\n\n        this.setState(({offset,charList})=>({\n            charList:[...charList, ...newCharList ],\n            loading:false,\n            newItemLoading:false,\n            offset: offset+9,\n            charEnded:ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false,\n            \n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: propTypes.func.isRequired\n}\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport { Component } from 'react/cjs/react.production.min';\nimport MarvelService from '../../servesers/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport propTypes from 'prop-types';\n\n\n\nclass CharInfo extends Component {\n\n    state={\n        char:null,\n        loading:false,\n        error:false,\n\n    }\n    marvelService= new MarvelService();\n\n    componentDidMount(){\n        this.updateChar()\n    }\n    componentDidUpdate(prevProps,prevState){\n        if(this.props.charId!==prevProps.charId){\n            this.updateChar();\n        }\n    }\n    onError=()=>{\n        this.setState({\n            loading:false,\n            error:true\n        })\n    }\n\n    onCharLoad=(char)=>{\n      \n        this.setState({char:char,\n        loading:false\n    })\n    }\n\n    updateChar=()=>{\n        const {charId}=this.props\n        if (!charId&&charId===0){\n            return\n        }\n        this.onCharLoad();\n        this.marvelService.getCharacter(charId)\n                        .then(this.onCharLoad)\n                        .catch(this.error)\n\n        \n    }\n    render(){\n        const {char,loading, error}=this.state;\n        const skeleton=char||loading||error ? null:<Skeleton/>;\n        const errorMessage=error?<ErrorMessage/>:null;\n        const spinner = loading?<Spinner/>:null;\n        const content = !(loading||error||!char)?<View char={char}/>:null\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n                    \n            </div>\n        )\n\n    }    \n}\nconst View=(char)=>{\n    const {name,description,thumbnail,homepage,wiki,comics}=char.char\n    \n    \n    return(\n        <>\n        <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name} style={(thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\")?{objectFit: 'contain'}:null}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                   { comics.map((item,i) =>{\n                       if(i>9)return\n                       return (\n                        <li key={i} className=\"char__comics-item\">\n                        {item.name}\n                        </li>\n                       )\n                   })}\n                    \n                   \n                </ul>\n        \n        </>\n    )\n}\n\n\nCharInfo.propTypes={\n    charId: propTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\n\nclass ErrorBoundary extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      error:false\n    }\n  }\n\n  componentDidCatch(error, errorInfo){\n    console.log(error, errorInfo);\n    this.setState({\n      error:true\n    })\n  }\n  render(){\n    if(this.state.error){\n      return <ErrorMessage/>\n    }\n    \n    return  this.props.children;\n  }\n      \n}\n\n\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            selectedChar:0\n        }\n    }\n\n    onCharSelected=(id)=>{\n        this.setState({\n            selectedChar:id\n        })\n    }\n\n    render(){\n\n\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                      <RandomChar/>\n                    </ErrorBoundary>  \n                    <div className=\"char__content\">\n                    <ErrorBoundary><CharList onCharSelected={this.onCharSelected}/></ErrorBoundary>   \n                    <ErrorBoundary >  \n                        <CharInfo charId={this.state.selectedChar}/>\n                    </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n   \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}